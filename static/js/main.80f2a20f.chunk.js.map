{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","routes/Test.js","components/Router.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","GoogleAuthProvider","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","console","log","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","google_provider","signInWithPopup","then","result","user","github_provider","GithubAuthProvider","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","userObj","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","urlRef","ref","attachmentUrl","deleteDoc","doc","id","deleteObject","toggleEditing","updateDoc","useEffect","autoFocus","displayName","src","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","fileRef","uid","v4","uploadString","uploadFile","getDownloadURL","nweetPosting","createdAt","Date","now","creatorId","addDoc","collection","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","q","query","orderBy","onSnapshot","snapShot","nweetArr","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","Profile","refreshUser","newDisplayName","setNewDisplayName","navigate","useNavigate","getMyNweets","where","getDocs","forEach","updateProfile","currentUser","signOut","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","element","exatc","Test","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","args","getFullYear","firebase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80f2a20f.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { GoogleAuthProvider } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport default app;\r\nexport const authService = getAuth();\r\nexport const google_provider = new GoogleAuthProvider();\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage();\r\n","import { authService } from \"fbase\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // create account\r\n        data = await createUserWithEmailAndPassword(\r\n          authService,\r\n          email,\r\n          password\r\n        );\r\n        console.log(\"create new account mode \", data);\r\n      } else {\r\n        // log in\r\n        data = await signInWithEmailAndPassword(authService, email, password);\r\n        console.log(\"log in mode\", data);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n      // console.log(error.message);\r\n    }\r\n  };\r\n  const onToggleChange = () => {\r\n    setNewAccount((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          required\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          required\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n      </form>\r\n      {error && <span className=\"authError\">{error}</span>}\r\n      <span onClick={onToggleChange} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService } from \"fbase\";\r\nimport {\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n} from \"firebase/auth\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = (event) => {\r\n    const { name } = event.target;\r\n    console.log(name);\r\n    if (name === \"google\") {\r\n      //google\r\n      let google_provider = new GoogleAuthProvider();\r\n      console.log(\"google_provider : \", google_provider);\r\n      signInWithPopup(authService, google_provider).then((result) => {\r\n        const user = result.user;\r\n        console.log(\"user : \", user);\r\n      });\r\n    } else if (name === \"github\") {\r\n      // github\r\n      let github_provider = new GithubAuthProvider();\r\n      console.log(\"github_provider : \", github_provider);\r\n      signInWithPopup(authService, github_provider).then((result) => {\r\n        const user = result.user;\r\n        console.log(\"user : \", user);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import React, { useEffect } from \"react\";\r\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\r\nimport { authService, dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { deleteObject, ref } from \"firebase/storage\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner, userObj }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      const urlRef = ref(storageService, nweetObj.attachmentUrl);\r\n      await deleteDoc(doc(dbService, \"nweets\", `${nweetObj.id}`));\r\n\r\n      await deleteObject(urlRef);\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await updateDoc(doc(dbService, \"nweets\", `${nweetObj.id}`), {\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const { value } = event.target;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // setEditing(false);\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Edit your nweet\"\r\n                  onChange={onChange}\r\n                  value={newNweet}\r\n                  required\r\n                  autoFocus\r\n                  className=\"formInput\"\r\n                />\r\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n              </form>\r\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                Cancel\r\n              </span>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <span className=\"nweet__name\" style={{ color: \"blue\" }}>\r\n            {nweetObj.displayName}\r\n          </span>\r\n          <div className=\"nweet__text\">{nweetObj.text}</div>\r\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import React, { useState } from \"react\";\r\nimport { addDoc, collection } from \"firebase/firestore\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 } from \"uuid\";\r\nimport { getDownloadURL, ref, uploadString } from \"firebase/storage\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      // 파일 참조 경로 만들기\r\n      const fileRef = ref(storageService, `${userObj.uid}/${v4()}`);\r\n      //storage 참조 경로로 파일 업로드 하기\r\n      const uploadFile = await uploadString(fileRef, attachment, \"data_url\");\r\n      console.log(uploadFile);\r\n      // storage에 있는 파일 URL로 다운로드 받기\r\n      attachmentUrl = await getDownloadURL(uploadFile.ref);\r\n    }\r\n\r\n    // 트윗할 때, 메시지와 사진도 같이 firestore에 생성\r\n    const nweetPosting = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n      displayName: userObj.displayName,\r\n    };\r\n\r\n    if (attachmentUrl !== \"\") console.log(attachmentUrl);\r\n    const docRef = await addDoc(collection(dbService, \"nweets\"), nweetPosting);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n\r\n    // try {\r\n    //   const docRef = await addDoc(collection(dbService, \"nweets\"), {\r\n    //     text: nweet,\r\n    //     createdAt: Date.now(),\r\n    //     creatorId: userObj.uid,\r\n    //   });\r\n    //   console.log(\"Document written with ID: \", docRef.id);\r\n    // } catch (e) {\r\n    //   console.error(\"Error adding document: \", e);\r\n    // }\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const { value } = event.target;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const { files } = event.target;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const { result } = finishedEvent.currentTarget;\r\n      console.log(result);\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n    console.log(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => {\r\n    setAttachment(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const q = query(\r\n      collection(dbService, \"nweets\"),\r\n      orderBy(\"createdAt\", \"desc\")\r\n    );\r\n    onSnapshot(q, (snapShot) => {\r\n      const nweetArr = snapShot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArr);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n            userObj={userObj}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;\r\n","import { authService, dbService } from \"fbase\";\r\nimport { collection, where, query, getDocs, orderBy } from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { updateProfile } from \"firebase/auth\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const navigate = useNavigate();\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    navigate(\"/\");\r\n  };\r\n  const getMyNweets = async () => {\r\n    const q = query(\r\n      collection(dbService, \"nweets\"),\r\n      where(\"creatorId\", \"==\", `${userObj.uid}`),\r\n      orderBy(\"createdAt\")\r\n    );\r\n    const querySnapShot = await getDocs(q);\r\n    querySnapShot.forEach((doc) => {\r\n      console.log(doc.id, \"=> \", doc.data());\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n\r\n  const onChange = (event) => {\r\n    const { value } = event.target;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await updateProfile(authService.currentUser, {\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n      // setProfileName(newDisplayName);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          autoFocus\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\n\r\nexport default () => <span>Test</span>;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\nimport Profile from \"routes/Profile\";\r\nimport Test from \"routes/Test\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <div\r\n        style={{\r\n          maxWidth: 890,\r\n          width: \"100%\",\r\n          margin: \"0 auto\",\r\n          marginTop: 80,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Routes>\r\n          {isLoggedIn ? (\r\n            <>\r\n              <Route\r\n                exact={true}\r\n                path={\"/\"}\r\n                element={<Home userObj={userObj} />}\r\n              ></Route>\r\n              <Route\r\n                exact={true}\r\n                path={\"/profile\"}\r\n                element={\r\n                  <Profile refreshUser={refreshUser} userObj={userObj} />\r\n                }\r\n              ></Route>\r\n              <Route exatc={true} path={\"/test\"} element={<Test />}></Route>\r\n              {/* <Route exact={true} path={\"/\"}></Route> */}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Route exact={true} path={\"/\"} element={<Auth />}></Route>\r\n              <Route exact={true} path={\"/\"}></Route>\r\n            </>\r\n          )}\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { updateProfile } from \"@firebase/auth\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged(async (user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) =>\n            updateProfile(user, { displayName: user.displayName }),\n        });\n        console.log(user);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) =>\n        updateProfile(user, { displayName: user.displayName }),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n      <footer> &copy; {new Date().getFullYear()} Nwitter </footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport firebase from \"fbase\";\nimport \"style.css\";\n\nconsole.log(firebase);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}